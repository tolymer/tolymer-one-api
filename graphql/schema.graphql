"""
Autogenerated input type of CreateEvent
"""
input CreateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  eventDate: ISO8601Date!
  participants: [String!]!
}

"""
Autogenerated return type of CreateEvent
"""
type CreateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of CreateGame
"""
input CreateGameInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  eventToken: String!
  results: [GameResultInput!]!
}

"""
Autogenerated return type of CreateGame
"""
type CreateGamePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  game: Game!
}

"""
Autogenerated input type of DeleteGame
"""
input DeleteGameInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  eventToken: String!
  gameId: Int!
}

"""
Autogenerated return type of DeleteGame
"""
type DeleteGamePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DeleteTip
"""
input DeleteTipInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  eventToken: String!
}

"""
Autogenerated return type of DeleteTip
"""
type DeleteTipPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Event {
  eventDate: ISO8601Date!
  games: [Game!]!
  participants: [Participant!]!
  tip: Tip
  token: String!
}

type Game {
  id: Int!
  results: [GameResult!]!
}

type GameResult {
  participantId: Int!
  rank: Int!
  score: Float!
}

input GameResultInput {
  participantId: Int!
  score: Float!
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

type Mutation {
  createEvent(
    """
    Parameters for CreateEvent
    """
    input: CreateEventInput!
  ): CreateEventPayload
  createGame(
    """
    Parameters for CreateGame
    """
    input: CreateGameInput!
  ): CreateGamePayload
  deleteGame(
    """
    Parameters for DeleteGame
    """
    input: DeleteGameInput!
  ): DeleteGamePayload
  deleteTip(
    """
    Parameters for DeleteTip
    """
    input: DeleteTipInput!
  ): DeleteTipPayload
  updateEvent(
    """
    Parameters for UpdateEvent
    """
    input: UpdateEventInput!
  ): UpdateEventPayload
  updateGame(
    """
    Parameters for UpdateGame
    """
    input: UpdateGameInput!
  ): UpdateGamePayload
  updateParticipants(
    """
    Parameters for UpdateParticipants
    """
    input: UpdateParticipantsInput!
  ): UpdateParticipantsPayload
  upsertTip(
    """
    Parameters for UpsertTip
    """
    input: UpsertTipInput!
  ): UpsertTipPayload
}

type Participant {
  id: Int!
  name: String!
}

input ParticipantRenameInput {
  id: Int!
  name: String!
}

type Query {
  event(token: String!): Event
}

type Tip {
  results: [TipResult!]!
}

type TipResult {
  participantId: Int!
  score: Float!
}

input TipResultInput {
  participantId: Int!
  score: Float!
}

"""
Autogenerated input type of UpdateEvent
"""
input UpdateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  eventDate: ISO8601Date!
  eventToken: String!
}

"""
Autogenerated return type of UpdateEvent
"""
type UpdateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of UpdateGame
"""
input UpdateGameInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  eventToken: String!
  gameId: Int!
  results: [GameResultInput!]!
}

"""
Autogenerated return type of UpdateGame
"""
type UpdateGamePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  game: Game!
}

"""
Autogenerated input type of UpdateParticipants
"""
input UpdateParticipantsInput {
  addingNames: [String!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletingIds: [Int!]
  eventToken: String!
  renamingParticipants: [ParticipantRenameInput!]
}

"""
Autogenerated return type of UpdateParticipants
"""
type UpdateParticipantsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  participants: [Participant!]!
}

"""
Autogenerated input type of UpsertTip
"""
input UpsertTipInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  eventToken: String!
  results: [TipResultInput!]!
}

"""
Autogenerated return type of UpsertTip
"""
type UpsertTipPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  tip: Tip!
}
